apiVersion: networking.x-k8s.io/v1alpha1
kind: GatewayClass
metadata:
  name: istio
spec:
  controller: istio.io/gateway-controller
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: gateway
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - hostname: "*.domain.example"
    port: 80
    protocol: HTTP
    routes:
      namespaces:
        from: All
      kind: HTTPRoute
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: invalid-service
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - hostname: "*.example"
    port: 80
    protocol: HTTP
    routes:
      kind: HTTPRoute
  addresses:
  - value: fake-service.com
    type: NamedAddress
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: target-port-reference
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - hostname: "*.example"
    port: 8080 # Test service has port 80 with targetPort 8080
    protocol: HTTP
    routes:
      kind: HTTPRoute
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: invalid-gateway-address
  namespace: invalid-gateway-address
spec:
  gatewayClassName: istio
  addresses:
  - value: 1.2.3.4
    type: IPAddress
  listeners:
  - hostname: "*.domain.example"
    port: 80
    protocol: HTTP
    routes:
      kind: HTTPRoute
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: invalid-tls
  namespace: istio-system
spec:
  gatewayClassName: istio
  listeners:
  - hostname: "domain.example"
    port: 34000
    protocol: HTTPS
    routes:
      kind: HTTPRoute
    tls:
      mode: Terminate
      certificateRef:
        name: my-cert-http
        group: core
        kind: unknown
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: invalid-filter
  namespace: default
spec:
  hostnames: ["first.domain.example"]
  gateways:
    allow: All
  rules:
  - filters:
    - type: ExtensionRef
    forwardTo:
    - serviceName: httpbin
      port: 80
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: invalid-backendRef
  namespace: default
spec:
  gateways:
    allow: All
  hostnames: ["first.domain.example"]
  rules:
  - forwardTo:
    - backendRef:
        kind: Service
        name: httpbin
        group: core
      port: 80
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: BackendPolicy
metadata:
  name: bad-ca-cert
spec:
  backendRefs:
  - name: httpbin1
    group: core
    kind: Service
  tls:
    certificateAuthorityRef:
      name: ca-cert
      group: core
      kind: unknown
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: BackendPolicy
metadata:
  name: bad-backend
spec:
  backendRefs:
  - name: httpbin1
    group: core
    kind: unknown